{"version":3,"file":"sentry-CFe3tUzI.js","sources":["../../src/sentry.js"],"sourcesContent":["// Sentry error monitoring configuration (browser-safe)\ntry {\n    // Check if we're in a browser environment and not in development\n    if (typeof window !== 'undefined' && typeof process === 'undefined') {\n        // Browser environment without Node.js process object\n        const isDevelopment = window.location.hostname === 'localhost' || \n                             window.location.hostname === '127.0.0.1' ||\n                             window.location.hostname === '0.0.0.0';\n        \n        const isProduction = window.location.hostname.includes('render.com') ||\n                           window.location.hostname.includes('herokuapp.com') ||\n                           (!isDevelopment && window.location.protocol === 'https:');\n        \n        if (isProduction) {\n            // Only initialize Sentry in production with proper error handling\n            console.log('Production environment detected - Sentry monitoring ready');\n            \n            // Uncomment and configure when ready to use Sentry:\n            /*\n            import('@sentry/browser').then(Sentry => {\n                Sentry.init({\n                    dsn: \"your-dsn-here\",\n                    environment: \"production\",\n                    tracesSampleRate: 0.1,\n                    beforeSend(event) {\n                        // Filter out source map errors\n                        if (event.exception) {\n                            const error = event.exception.values[0];\n                            if (error && error.value && error.value.includes('source map')) {\n                                return null; // Don't send source map errors\n                            }\n                        }\n                        return event;\n                    }\n                });\n            }).catch(error => {\n                console.warn('Sentry initialization failed:', error);\n            });\n            */\n        } else {\n            console.log('Development environment - Sentry monitoring disabled');\n        }\n    } else if (typeof process !== 'undefined' && process.env) {\n        // Node.js environment (shouldn't happen in browser but being safe)\n        if (process.env.NODE_ENV === 'production') {\n            console.log('Node.js production environment detected');\n        }\n    } else {\n        console.log('Environment detection inconclusive - skipping Sentry initialization');\n    }\n} catch (error) {\n    console.warn('Sentry initialization failed:', error);\n}\n\nexport default {}; // Export empty object to satisfy ES module requirements\n\n"],"names":["isDevelopment","isProduction","define_process_env_default","error","sentry"],"mappings":"SACA,GAAI,CAEA,GAAI,OAAO,OAAW,KAAe,OAAO,QAAY,IAAa,CAE3D,MAAAA,EAAgB,OAAO,SAAS,WAAa,aAC9B,OAAO,SAAS,WAAa,aAC7B,OAAO,SAAS,WAAa,UAE5CC,EAAe,OAAO,SAAS,SAAS,SAAS,YAAY,GAChD,OAAO,SAAS,SAAS,SAAS,eAAe,GAChD,CAACD,GAAiB,OAAO,SAAS,WAAa,SAI/D,QAAQ,IAFRC,EAEY,4DAyBA,sDAzB2D,CA2BpE,MAGH,QAAQ,IAHL,OAAO,QAAY,KAAeC,EAGzB,0CAGJ,qEAH6C,CAKjE,OAASC,EAAO,CACJ,QAAA,KAAK,gCAAiCA,CAAK,CACvD,CAEA,MAAAC,EAAe,CAAC"}